@model TiffinMgmtSystem.Models.UserDetail

@{
    Layout = null;
}

<html>
<head>
    <link href="~/Assets/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Assets/css/style.min.css" rel="stylesheet" />
    <title>Sign Up</title>
</head>
<body>

    <div class="container login-container">
        <div class="row">
            <div class="col-md-6 mx-auto login-form-1">
                <h3 class="font-weight-bold text-themecolor">Tiffin Mangement</h3>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.GenderId, "GenderId", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("GenderId", new List<SelectListItem>
                             {
                             new SelectListItem { Text = "Male", Value="1" },
                             new SelectListItem { Text = "Female", Value="2" }
                             }, "Select Gender", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Sign Up" class="btnSubmit" />
                            </div>
                        </div>
                    </div>
                }
                <div>
                    @Html.ActionLink("Already have an account. Sign in here!", "SignIn", null, htmlAttributes: new { @class = "ForgetPwd" })
                </div>
            </div>
        </div>
    </div>
</body>
</html>
